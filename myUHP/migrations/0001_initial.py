# Generated by Django 5.0.6 on 2024-06-01 20:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BriefingProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('briefing_title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Title')),
                ('start_date', models.DateField(blank=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, verbose_name='End date')),
                ('reporting_date', models.DateField(blank=True, verbose_name='Reporting date')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=10, verbose_name='Country code')),
                ('country_name', models.CharField(max_length=100, verbose_name='Country name')),
            ],
        ),
        migrations.CreateModel(
            name='DocSave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_doc', models.CharField(blank=True, max_length=200, null=True, verbose_name='File name')),
                ('file_doc', models.ImageField(null=True, upload_to='uhpapp/static/images/demo')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('details', models.CharField(max_length=500)),
                ('mostinfo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GsmWorkplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lowest_task', models.CharField(max_length=50, verbose_name='Lowest task')),
                ('lowest_task_short', models.CharField(max_length=100, verbose_name='Lowest task short name')),
                ('lowest_task_description', models.CharField(max_length=250, verbose_name='Lowest task short description')),
            ],
        ),
        migrations.CreateModel(
            name='Kpi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_result', models.CharField(max_length=250, null=True, verbose_name='Expected result')),
                ('kpi_code', models.CharField(max_length=30, verbose_name='Kpi code')),
                ('kpi_description', models.CharField(max_length=250, verbose_name='Kpi Description')),
                ('kpi_country_level', models.CharField(max_length=250, null=True, verbose_name='Kpi country level')),
                ('data_description', models.CharField(max_length=250, null=True, verbose_name='Data description')),
                ('data_source', models.CharField(max_length=250, null=True, verbose_name='Data source')),
                ('collection_methods', models.CharField(max_length=250, null=True, verbose_name='Collection methods')),
                ('data_frequency', models.CharField(max_length=250, null=True, verbose_name='Data frequency')),
                ('kpi_link', models.CharField(max_length=100, null=True, verbose_name='Kpi link')),
            ],
        ),
        migrations.CreateModel(
            name='MailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_mail', models.CharField(max_length=100, null=True, verbose_name='Title')),
                ('message_mail', models.TextField(null=True, verbose_name='Message')),
            ],
        ),
        migrations.CreateModel(
            name='Outputworkplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_code', models.CharField(max_length=10, verbose_name='Output code')),
                ('output_description', models.CharField(max_length=200, verbose_name='Output description')),
            ],
        ),
        migrations.CreateModel(
            name='ReportSave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_rep', models.CharField(blank=True, max_length=200, null=True, verbose_name='Report title')),
                ('author_rep', models.CharField(blank=True, max_length=500, null=True, verbose_name='Organization responsible for the report')),
                ('date_rep', models.DateField(blank=True, verbose_name='Date')),
                ('summary_rep', models.CharField(max_length=500, verbose_name='Summary report')),
                ('file_rep', models.FileField(null=True, upload_to='uhpapp/static/report/pdf')),
                ('img_cp_rep', models.ImageField(null=True, upload_to='uhpapp/static/report/imgs')),
            ],
        ),
        migrations.CreateModel(
            name='Statutworkplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut_name', models.CharField(max_length=30, verbose_name='Statut name')),
            ],
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_subscriber', models.CharField(max_length=50, unique=True)),
                ('email_subscriber', models.EmailField(max_length=254, null=True)),
                ('date_subscriber', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible', models.CharField(blank=True, max_length=500, null=True, verbose_name='Organization responsible for the survey')),
                ('title_surv', models.CharField(blank=True, max_length=350, null=True, verbose_name='Survey title')),
                ('start_date', models.DateField(blank=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, verbose_name='End date')),
                ('location_survey', models.CharField(blank=True, max_length=500, null=True, verbose_name='Survey location')),
            ],
        ),
        migrations.CreateModel(
            name='TypeMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_meeting', models.CharField(max_length=250, verbose_name='Statut name')),
            ],
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_code', models.CharField(max_length=10, verbose_name='Unit code')),
                ('unit_description', models.CharField(max_length=250, verbose_name='Unit description')),
            ],
        ),
        migrations.CreateModel(
            name='KpiAchieve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_baseline', models.CharField(max_length=100, verbose_name='Baseline of the KPI')),
                ('kpi_target', models.CharField(max_length=30, verbose_name='Target of the KPI')),
                ('report_date', models.DateField(blank=True, null=True, verbose_name='Report date')),
                ('report_resut', models.CharField(max_length=250, verbose_name='Result of the KPI')),
                ('report_comment', models.CharField(max_length=250, verbose_name='Comment')),
                ('kpi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kpis_kpiAchive', to='myUHP.kpi')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_meeting', models.DateField(blank=True, verbose_name='Date of meeting')),
                ('name_meeting', models.CharField(blank=True, max_length=500, null=True, verbose_name='Name')),
                ('objective_meeting', models.CharField(blank=True, max_length=500, null=True, verbose_name='Objective')),
                ('taking_place', models.CharField(blank=True, max_length=500, null=True, verbose_name='Taking place')),
                ('chair_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Chair Name')),
                ('note_taker', models.CharField(blank=True, max_length=500, null=True, verbose_name='NoteTaker Name')),
                ('participants_list', models.CharField(blank=True, max_length=500, null=True, verbose_name='Participants list')),
                ('kpi', models.ManyToManyField(related_name='kpis_meetingProject', to='myUHP.kpi')),
                ('output', models.ManyToManyField(related_name='outputs_meetingProject', to='myUHP.outputworkplan')),
                ('type_meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typemeeting_meetingProject', to='myUHP.typemeeting')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingDiscussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_discussion', models.CharField(blank=True, max_length=500, null=True, verbose_name='Topics for discussion ')),
                ('summary_discussion', models.CharField(blank=True, max_length=500, null=True, verbose_name='Summary of discussion ')),
                ('recommandation', models.CharField(blank=True, max_length=500, null=True, verbose_name='Recommandations ')),
                ('actions_points', models.CharField(blank=True, max_length=500, null=True, verbose_name='Actions points ')),
                ('responsible', models.CharField(blank=True, max_length=500, null=True, verbose_name='Responsible')),
                ('action_deadlines', models.DateField(blank=True, verbose_name='Deadlines')),
                ('action_status', models.CharField(choices=[('NoStart', 'No start'), ('Ongoing', 'Ongoing'), ('Done', 'Done')], max_length=10, verbose_name='Status')),
                ('feedback_discussion', models.CharField(blank=True, max_length=500, null=True, verbose_name='Feedback of discussion ')),
                ('meetingProject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meetingProject_discussion', to='myUHP.meetingproject')),
            ],
        ),
        migrations.CreateModel(
            name='BriefingBackground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_background', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject ')),
                ('specific_topic', models.CharField(blank=True, max_length=500, null=True, verbose_name='Specific topic ')),
                ('accomplished_last_period', models.CharField(blank=True, max_length=700, null=True, verbose_name='Activities accomplished last period ')),
                ('planned_next_steps', models.CharField(blank=True, max_length=700, null=True, verbose_name='Activities planned current month')),
                ('comment_background', models.CharField(blank=True, max_length=500, null=True, verbose_name='Comments ')),
                ('briefingProject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='briefingProject_background', to='myUHP.briefingproject')),
                ('kpi', models.ManyToManyField(related_name='kpis_briefingProject', to='myUHP.kpi')),
                ('output', models.ManyToManyField(related_name='outputs_briefingProject', to='myUHP.outputworkplan')),
            ],
        ),
        migrations.CreateModel(
            name='Operworkplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_activity', models.CharField(max_length=250, verbose_name='Sub activity')),
                ('travel_required', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=5, verbose_name='Travel required')),
                ('consultants', models.IntegerField(blank=True, default=0, null=True, verbose_name='Number of consultants')),
                ('duration_days', models.IntegerField(blank=True, default=0, null=True, verbose_name='Duration days')),
                ('staff_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Staff amount')),
                ('travel_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Travel amount')),
                ('procurment_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Procurment amount')),
                ('service_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Service amount')),
                ('flexible_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Flexible amount')),
                ('vc_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='VC amount')),
                ('responsable', models.CharField(max_length=250, verbose_name='Responsible')),
                ('coworkers', models.CharField(max_length=250, verbose_name='Coworkers')),
                ('expected_result', models.CharField(max_length=250, verbose_name='Expected result')),
                ('indicator_measuring', models.CharField(max_length=250, verbose_name='Indicator measuring')),
                ('collect_method', models.CharField(max_length=250, verbose_name='Collect method')),
                ('completion_date', models.DateField(blank=True, verbose_name='Completion date')),
                ('comments', models.CharField(max_length=250, verbose_name='Comments')),
                ('country', models.ManyToManyField(related_name='countries_operwork', to='myUHP.country')),
                ('gsmWorkplan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gsmWorkplan_operw', to='myUHP.gsmworkplan')),
                ('statut_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statuts_operwork', to='myUHP.statutworkplan')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyDataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quest_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Question code')),
                ('question', models.CharField(max_length=1000, verbose_name='Questions')),
                ('response_text', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Response in text format')),
                ('response_num', models.FloatField(blank=True, null=True, verbose_name='Response in integer format')),
                ('level_1', models.CharField(blank=True, max_length=500, null=True, verbose_name='First area of data')),
                ('level_2', models.CharField(blank=True, max_length=500, null=True, verbose_name='Seconde area of data')),
                ('surveyProject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_surveyData', to='myUHP.surveyproject')),
            ],
        ),
        migrations.CreateModel(
            name='Toptask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_task', models.IntegerField(blank=True, null=True, verbose_name='Top task')),
                ('top_task_short', models.CharField(max_length=100, verbose_name='Top task short name')),
                ('top_task_description', models.CharField(max_length=250, verbose_name='Top task short description')),
                ('kpi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kpis_toptask', to='myUHP.kpi')),
                ('output', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outputs_toptask', to='myUHP.outputworkplan')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units_toptask', to='myUHP.units')),
            ],
        ),
        migrations.AddField(
            model_name='gsmworkplan',
            name='toptask',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='toptask_gsmWorkplan', to='myUHP.toptask'),
        ),
        migrations.CreateModel(
            name='RiskIdentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Risk identification')),
                ('risk_cause', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cause')),
                ('risk_impact', models.CharField(blank=True, max_length=500, null=True, verbose_name='Risk consequence')),
                ('risk_category', models.CharField(choices=[('Financial', 'Financial'), ('Political_governance', 'Political or governance'), ('Reputational', 'Reputational'), ('Staff_Systems_Structures', 'Staff, Systems & Structures'), ('Strategic', 'Strategic'), ('Technical', 'Technical or Public Health')], max_length=100, verbose_name='Risk Category')),
                ('risk_status', models.CharField(choices=[('New', 'New'), ('Existing', 'Existing'), ('closed', 'To be closed')], max_length=100, verbose_name='Risk Status')),
                ('risk_occuring', models.CharField(choices=[('Very_High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=100, verbose_name='Probability of Risk Occuring')),
                ('risk_rating', models.CharField(choices=[('Severe', 'Severe'), ('Major', 'Major'), ('Medium', 'Medium'), ('Minor', 'Minor')], max_length=100, verbose_name='Risk Impact Rating')),
                ('risk_criticality', models.CharField(choices=[('Moderate', 'Moderate'), ('Critical', 'Critical'), ('Very_critical', 'Very critical')], max_length=100, verbose_name='Risk Criticality')),
                ('response_decision', models.CharField(choices=[('Accept_Tolerate', 'Accept or Tolerate'), ('Mitigate', 'Mitigate'), ('Transfer', 'Transfer'), ('Avoid', 'Avoid'), ('Exploit', 'Exploit')], max_length=100, verbose_name='Response Decision')),
                ('risk_action', models.CharField(blank=True, max_length=500, null=True, verbose_name='Risk Response Plan')),
                ('budget', models.FloatField(blank=True, null=True, verbose_name='Budget Implication')),
                ('response_date', models.DateField(blank=True, verbose_name='Response Date')),
                ('review_plan', models.CharField(choices=[('Relevant_Effective', 'Relevant and Effective'), ('Needs_revised', 'Needs to be revised'), ('Not_started', 'Not started'), ('Closed', 'To be closed')], max_length=100, verbose_name='Review of Existing Response Plans')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Comment')),
                ('responsible', models.CharField(blank=True, max_length=500, null=True, verbose_name='Responsible Person')),
                ('monitoring', models.FloatField(blank=True, null=True, verbose_name='Monitoring percent')),
                ('risk_criticality_after', models.CharField(choices=[('Moderate', 'Moderate'), ('Critical', 'Critical'), ('Very_critical', 'Very critical')], max_length=100, verbose_name='After preventive actions')),
                ('toptask', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='toptask_risk', to='myUHP.toptask')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='units_risk', to='myUHP.units')),
            ],
        ),
        migrations.AddField(
            model_name='kpi',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='units_kpi', to='myUHP.units'),
        ),
        migrations.CreateModel(
            name='IndividualReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_name', models.CharField(max_length=250, verbose_name='Staff Full Name')),
                ('email_staff', models.EmailField(max_length=254)),
                ('supervisor', models.CharField(max_length=250, verbose_name='Supervisor Full Name')),
                ('email_sup', models.EmailField(max_length=254)),
                ('start_date', models.DateField(blank=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, verbose_name='End date')),
                ('Question_1', models.CharField(max_length=500, verbose_name='What output would you like to focus on during this period?')),
                ('Question_2', models.CharField(max_length=500, verbose_name='Specify tasks you would like to lead (1 or 2)')),
                ('Question_3', models.CharField(max_length=500, verbose_name='What support (tools, skills, training, office environment) would you like to receive from your supervisor/other experienced staff in performing your duties?')),
                ('Question_4', models.CharField(max_length=500, verbose_name='What are your 2 or 3 main achievements during this reporting period? To be completed at the end of the performance period and discussed with the supervisor and cluster director')),
                ('Question_5', models.CharField(max_length=500, verbose_name='Final comments')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='units_indReport', to='myUHP.units')),
            ],
        ),
        migrations.AddField(
            model_name='briefingproject',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='units_briefingNote', to='myUHP.units'),
        ),
    ]
